{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "Routes": [
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5001
        }
      ],
      "ServiceName": "emstum-api-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/core/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    {
      "DownstreamPathTemplate": "/bts/resources/applications/{path}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5001
        }
      ],
      "ServiceName": "emstum-api-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/bts/resources/applications/{path}",
      "UpstreamHttpMethod": [ "Get" ]
    },
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5011
        }
      ],
      "ServiceName": "filemanager-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/filemanager/api/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5002
        }
      ],
      "ServiceName": "emstum-auth-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/auth/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5003
        }
      ],
      "ServiceName": "registration-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/registration/api/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete" ]
    },
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5004
        }
      ],
      "ServiceName": "bs-filegen-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/gen/api/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    {
      "DownstreamPathTemplate": "/api/{controller}/{endpointmethod}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 5009
        }
      ],
      "ServiceName": "salary-declaration-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/salarydeclaration/{controller}/{endpointmethod}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },

    // ------------------- Register Java services
    // ------------------------------------------------- employee-performance-service -----------------------------------
    {
      "DownstreamPathTemplate": "/api/eps/{path}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8081
        }
      ],
      "ServiceName": "employee-performance-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/eps/{path}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    // ----------------------------------- XXXXXXXXXXXXXXXXXXXXXXX -----------------------------------

    // ------------------------------------------------- employee-filter-service -----------------------------------
    {
      "DownstreamPathTemplate": "/api/ef/{path}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8091
        }
      ],
      "ServiceName": "employee-filter-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/ef/{path}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    },
    // ----------------------------------- XXXXXXXXXXXXXXXXXXXXXXX -----------------------------------

    // ------------------------------------------------- project-service -----------------------------------
    {
      "DownstreamPathTemplate": "/api/ps/{path}",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "localhost",
          "Port": 8085
        }
      ],
      "ServiceName": "project-service",
      "LoadBalancerOptions": {
        "Type": "LeastConnection"
      },
      "UpstreamPathTemplate": "/api/ps/{path}",
      "UpstreamHttpMethod": [ "Get", "Post", "Put", "Delete", "OPTIONS" ]
    }
    // ----------------------------------- XXXXXXXXXXXXXXXXXXXXXXX -----------------------------------
  ],
  "GlobalConfiguration": {
    "ServiceDiscoveryProvider": {
      "Namespace": "default",
      "Type": "KubernetesServiceDiscoveryProvider"
    }
  },
  "MicroserviceRegistry": {
    "GenerateJWtToken": "http://servicemanager-service:8089/api/Login/GenerateToken",
    "KafkaConfigurationUrl": "http://bt-server-keyvault-service:5013/bt/s2/GitHubKeysProd/GetConfigurationAsync/ems/kafka-configuration-prod.json",
    "DatabaseConfigurationUrl": "http://bt-server-keyvault-service:5013/bt/s2/GitHubKeysProd/GetMasterConnectionAsync/ems/prod",
    "PublicKeysConfigurationUrl": "http://bt-server-keyvault-service:5013/bt/s2/GitHubKeysProd/GetPublicKeysAsync/0"
  }
}
